typeof SDK=="undefined"&&(SDK={__namespace:!0});SDK.JQuery={_context:function(){return typeof GetGlobalContext!="undefined"?GetGlobalContext():typeof Xrm!="undefined"?Xrm.Page.context:typeof window.parent.Xrm!="undefined"?window.parent.Xrm.Page.context:null},getXrm:function(){if(typeof Xrm!="undefined")return Xrm;if(typeof window.parent.Xrm!="undefined")return window.parent.Xrm;throw new Error("XRM is not available.");},_getClientUrl:function(){var n=this._context();return n!=null?this._context().getClientUrl():"https://infn365.crm4.dynamics.com"},_ODataPath:function(){return this._getClientUrl()+"/XRMServices/2011/OrganizationData.svc/"},_errorHandler:function(n){return new Error("Error : "+n.status+": "+n.statusText+": "+JSON.parse(n.responseText).error.message.value)},_dateReviver:function(n,t){var i;return typeof t=="string"&&(i=/Date\(([-+]?\d+)\)/.exec(t),i)?new Date(parseInt(t.replace("/Date(","").replace(")/",""),10)):t},_parameterCheck:function(n,t){if(typeof n=="undefined"||n===null)throw new Error(t);},_stringParameterCheck:function(n,t){if(typeof n!="string")throw new Error(t);},_callbackParameterCheck:function(n,t){if(typeof n!="function")throw new Error(t);},createRecord:function(n,t,i,r){this._parameterCheck(n,"SDK.JQuery.createRecord requires the object parameter.");this._stringParameterCheck(t,"SDK.JQuery.createRecord requires the type parameter is a string.");this._callbackParameterCheck(i,"SDK.JQuery.createRecord requires the successCallback is a function.");this._callbackParameterCheck(r,"SDK.JQuery.createRecord requires the errorCallback is a function.");var u=window.JSON.stringify(n);$.ajax({type:"POST",contentType:"application/json; charset=utf-8",datatype:"json",url:this._ODataPath()+t+"Set",data:u,beforeSend:function(n){n.setRequestHeader("Accept","application/json")},success:function(n){i(n.d)},error:function(n){r(SDK.JQuery._errorHandler(n))}})},retrieveRecord:function(n,t,i,r,u,f){var e,o;this._stringParameterCheck(n,"SDK.JQuery.retrieveRecord requires the id parameter is a string.");this._stringParameterCheck(t,"SDK.JQuery.retrieveRecord requires the type parameter is a string.");i!=null&&this._stringParameterCheck(i,"SDK.JQuery.retrieveRecord requires the select parameter is a string.");r!=null&&this._stringParameterCheck(r,"SDK.JQuery.retrieveRecord requires the expand parameter is a string.");this._callbackParameterCheck(u,"SDK.JQuery.retrieveRecord requires the successCallback parameter is a function.");this._callbackParameterCheck(f,"SDK.JQuery.retrieveRecord requires the errorCallback parameter is a function.");e="";(i!=null||r!=null)&&(e="?",i!=null&&(o="$select="+i,r!=null&&(o=o+","+r),e=e+o),r!=null&&(e=e+"&$expand="+r));$.ajax({type:"GET",contentType:"application/json; charset=utf-8",datatype:"json",url:this._ODataPath()+t+"Set(guid'"+n+"')"+e,beforeSend:function(n){n.setRequestHeader("Accept","application/json")},success:function(n,t,i){u(JSON.parse(i.responseText,SDK.JQuery._dateReviver).d)},error:function(n){f(SDK.JQuery._errorHandler(n))}})},updateRecord:function(n,t,i,r,u){this._stringParameterCheck(n,"SDK.JQuery.updateRecord requires the id parameter.");this._parameterCheck(t,"SDK.JQuery.updateRecord requires the object parameter.");this._stringParameterCheck(i,"SDK.JQuery.updateRecord requires the type parameter.");this._callbackParameterCheck(r,"SDK.JQuery.updateRecord requires the successCallback is a function.");this._callbackParameterCheck(u,"SDK.JQuery.updateRecord requires the errorCallback is a function.");var f=window.JSON.stringify(t);$.ajax({type:"POST",contentType:"application/json; charset=utf-8",datatype:"json",data:f,url:this._ODataPath()+i+"Set(guid'"+n+"')",beforeSend:function(n){n.setRequestHeader("Accept","application/json");n.setRequestHeader("X-HTTP-Method","MERGE")},success:function(){r()},error:function(n){u(SDK.JQuery._errorHandler(n))}})},deleteRecord:function(n,t,i,r){this._stringParameterCheck(n,"SDK.JQuery.deleteRecord requires the id parameter.");this._stringParameterCheck(t,"SDK.JQuery.deleteRecord requires the type parameter.");this._callbackParameterCheck(i,"SDK.JQuery.deleteRecord requires the successCallback is a function.");this._callbackParameterCheck(r,"SDK.JQuery.deleteRecord requires the errorCallback is a function.");$.ajax({type:"POST",contentType:"application/json; charset=utf-8",datatype:"json",url:this._ODataPath()+t+"Set(guid'"+n+"')",beforeSend:function(n){n.setRequestHeader("Accept","application/json");n.setRequestHeader("X-HTTP-Method","DELETE")},success:function(){i()},error:function(n){r(SDK.JQuery._errorHandler(n))}})},retrieveMultipleRecords:function(n,t,i,r,u){this._stringParameterCheck(n,"SDK.JQuery.retrieveMultipleRecords requires the type parameter is a string.");t!=null&&this._stringParameterCheck(t,"SDK.JQuery.retrieveMultipleRecords requires the options parameter is a string.");this._callbackParameterCheck(i,"SDK.JQuery.retrieveMultipleRecords requires the successCallback parameter is a function.");this._callbackParameterCheck(r,"SDK.JQuery.retrieveMultipleRecords requires the errorCallback parameter is a function.");this._callbackParameterCheck(u,"SDK.JQuery.retrieveMultipleRecords requires the OnComplete parameter is a function.");var f;t!=null&&(f=t.charAt(0)!="?"?"?"+t:t);$.ajax({type:"GET",contentType:"application/json; charset=utf-8",datatype:"json",url:this._ODataPath()+n+"Set"+f,beforeSend:function(n){n.setRequestHeader("Accept","application/json")},success:function(t,f,e){if(t&&t.d&&t.d.results)if(i(JSON.parse(e.responseText,SDK.JQuery._dateReviver).d.results),t.d.__next!=null){var o=t.d.__next.substring((SDK.JQuery._ODataPath()+n+"Set").length);SDK.JQuery.retrieveMultipleRecords(n,o,i,r,u)}else u()},error:function(n){r(SDK.JQuery._errorHandler(n))}})},__namespace:!0};
